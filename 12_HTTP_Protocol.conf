# ---------------------------------------------------------------
# Sliqua WAF based on Comodo ModSecurity Rules
# Copyright (C) 2015 Sliqua Enterprise Hosting, Inc.
# Copyright (C) 2015 Comodo Security solutions All rights reserved.
# Please see the enclosed LICENCE file for full details.
# ---------------------------------------------------------------
# This is a FILE CONTAINING CHANGED or MODIFIED RULES FROM THE:
# OWASP ModSecurity Core Rule Set (CRS)
# Comodo Web Application Firewall
# ----------------------------------------------------------------

SecRule WEBSERVER_ERROR_LOG "@contains Invalid URI in request" \
	"id:210210,rev:1,msg:'COMODO WAF: Apache Error: Invalid URI in Request.',phase:5,severity:4,pass,setvar:'tx.points=+%{tx.points_limit1}',logdata:'%{request_line}',t:'none'"

SecRule FILES|FILES_NAMES "[\"';=]" \
	"id:210220,rev:1,msg:'COMODO WAF: Attempted multipart/form-data bypass',phase:2,severity:2,block,setvar:'tx.points=+%{tx.points_limit4}',logdata:'%{matched_var}',t:'none',t:'urlDecodeUni'"

SecRule REQBODY_ERROR "!@eq 0" \
	"id:210231,rev:2,chain,msg:'COMODO WAF: XMLRPC protection',phase:2,deny,status:403,log"
SecRule REQUEST_HEADERS:Content-Type "^text/xml$" \
	"chain,t:'none',t:'lowercase'"
SecRule REQUEST_FILENAME "@endsWith xmlrpc.php" \
	"t:'none',t:'lowercase'"

SecRule REQBODY_ERROR "!@eq 0" \
	"id:210230,rev:2,msg:'COMODO WAF: The request body could not be parsed. Possibility of an impedance mismatch attack. This is not a false positive.',phase:2,severity:2,pass,setvar:'tx.points=+%{tx.points_limit4}',logdata:'%{REQBODY_ERROR_MSG}',t:'none'"

SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
	"id:210240,rev:1,msg:'COMODO WAF: Multipart request body failed strict validation: PE %{REQBODY_PROCESSOR_ERROR}',phase:2,severity:2,block,setvar:'tx.points=+%{tx.points_limit4}',t:'none'"

SecRule REQUEST_HEADERS:Content-Length "!^[0-9]{1,}$" \
	"id:210260,rev:2,msg:'COMODO WAF: Content-Length HTTP header is not numeric or Integer overflow in CGit before 0.12 (CVE-2016-1901)',phase:1,severity:2,block,setvar:'tx.points=+%{tx.points_limit4}',logdata:'%{matched_var}',t:'none'"

SecRule REQUEST_METHOD "^(?:GET|HEAD)$" \
	"id:210270,rev:1,chain,msg:'COMODO WAF: GET or HEAD Request with Body Content.',phase:1,severity:2,block,logdata:'%{matched_var}',t:'none'"
SecRule REQUEST_HEADERS:Content-Length "!^0{0,1}$" \
	"setvar:'tx.points=+%{tx.points_limit4}',t:'none'"

SecRule REQUEST_METHOD "^POST$" \
	"id:210280,rev:1,chain,msg:'COMODO WAF: POST request missing Content-Length Header.',phase:1,severity:4,block,logdata:'%{matched_var}',t:'none'"
SecRule &REQUEST_HEADERS:Content-Length "@eq 0" \
	"setvar:'tx.points=+%{tx.points_limit1}',t:'none'"

SecRule REQUEST_HEADERS:Content-Encoding "^Identity$" \
	"id:210290,rev:1,msg:'COMODO WAF: Invalid Use of Identity Encoding.',phase:1,severity:4,block,setvar:'tx.points=+%{tx.points_limit1}',logdata:'%{matched_var}',t:'none'"

SecRule REQUEST_HEADERS:Expect "@contains 100-continue" \
	"id:210300,rev:1,chain,msg:'COMODO WAF: Expect Header Not Allowed for HTTP 1.0.',phase:1,severity:5,block,logdata:'%{matched_var}',t:'none'"
SecRule REQUEST_PROTOCOL "@streq HTTP/1.0" \
	"setvar:'tx.points=+%{tx.points_limit1}',t:'none'"

SecRule REQUEST_HEADERS:Range|REQUEST_HEADERS:Request-Range "([0-9]{1,})-([0-9]{1,})," \
	"id:210330,rev:1,chain,msg:'COMODO WAF: Range: Invalid Last Byte Value.',phase:2,severity:4,capture,block,setvar:'tx.points=+%{tx.points_limit2}',logdata:'%{matched_var}',t:'none'"
SecRule TX:2 "!@ge %{tx.1}"

SecRule REQUEST_HEADERS:Range|REQUEST_HEADERS:Request-Range "^bytes=([0-9]{1,}){0,1}-([0-9]{1,}){0,1},[\t\n\r ]{0,1}([0-9]{1,}){0,1}-([0-9]{1,}){0,1},[\t\n\r ]{0,1}([0-9]{1,}){0,1}-([0-9]{1,}){0,1},[\t\n\r ]{0,1}([0-9]{1,}){0,1}-([0-9]{1,}){0,1},[\t\n\r ]{0,1}([0-9]{1,}){0,1}-([0-9]{1,}){0,1}," \
	"id:210340,rev:1,msg:'COMODO WAF: Range: Too many fields',phase:2,severity:4,capture,block,setvar:'tx.points=+%{tx.points_limit2}',logdata:'%{matched_var}',t:'none'"

SecRule REQUEST_HEADERS:Connection "\b(close|keep-alive),[\t\n\r ]{0,1}(close|keep-alive)\b" \
	"id:210350,rev:1,msg:'COMODO WAF: Multiple/Conflicting Connection Header Data Found.',phase:2,severity:4,block,setvar:'tx.points=+%{tx.points_limit2}',logdata:'%{matched_var}',t:'none'"

SecRule REQUEST_HEADERS:Content-Type "^(application/x-www-form-urlencoded|text/xml)(?:;(?:[\t\n\r ]{0,1}charset[\t\n\r ]{0,1}=[\t\n\r ]{0,1}[a-zA-Z0-9\-_]{1,18}){0,1}){0,1}?$" \
	"id:210380,rev:3,chain,msg:'COMODO WAF: URL Encoding Abuse Attack Attempt',phase:2,severity:4,block,t:'none'"
SecRule REQUEST_BODY|XML:/* "%(u[0-9ABCDEFabcdef]{4,4}|[0-9ABCDEFabcdef]{2,2}|(?!$|[^a-zA-Z0-9_]))" \
	"chain"
SecRule REQUEST_BODY|XML:/* "@validateUrlEncoding" \
	"chain"
SecRule &ARGS_POST:pagetext "!@ge 1" \
	"setvar:'tx.points=+%{tx.points_limit2}'"

SecRule TX:CRS_VALIDATE_UTF8_ENCODING "@eq 1" \
	"id:210390,rev:1,chain,msg:'COMODO WAF: UTF8 Encoding Abuse Attack Attempt',phase:2,severity:4,block,t:'none'"
SecRule ARGS|ARGS_NAMES|REQUEST_FILENAME "@validateUtf8Encoding" \
	"setvar:'tx.points=+%{tx.points_limit2}'"

SecRule REQUEST_BODY|REQUEST_URI "%u[Ff]{2,2}[0-9ABCDEFabcdef]{2,2}" \
	"id:210400,rev:1,msg:'COMODO WAF: Unicode Full/Half Width Abuse Attack Attempt',phase:2,severity:4,block,setvar:'tx.points=+%{tx.points_limit2}',t:'none'"

SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS|!REQUEST_HEADERS:Referer "@validateByteRange 1-255" \
	"id:210410,rev:1,msg:'COMODO WAF: Invalid character in request',phase:2,severity:3,block,setvar:'tx.points=+%{tx.points_limit3}',t:'none',t:'urlDecodeUni'"

SecRule TX:PARANOID_MODE "@eq 1" \
	"id:210420,rev:1,chain,msg:'COMODO WAF: Invalid character in request',phase:2,severity:3,block,t:'none',t:'urlDecodeUni'"
SecRule REQUEST_BODY|REQUEST_HEADERS|REQUEST_HEADERS_NAMES|REQUEST_URI|TX:HPP_DATA|!REQUEST_HEADERS:Referer "@validateByteRange 32-126" \
	"setvar:'tx.points=+%{tx.points_limit3}',t:'urlDecodeUni'"
